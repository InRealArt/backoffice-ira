@import '/app/styles/variables.scss';

.formContainer {
  background-color: $color-background-white;
  border-radius: $border-radius-lg;
  box-shadow: $shadow-lg;
  padding: $spacing-3xl;
  max-width: 800px;
  margin: 0 auto;
}

.form {
  display: grid;
  gap: $spacing-xxl;
}

.formGroup {
  display: flex;
  flex-direction: column;
  gap: $spacing-sm;
}

.label {
  font-weight: $font-weight-semibold;
  font-size: $font-size-sm;
  color: $color-text-primary;
}

.input, .select {
  padding: $spacing-md;
  border: 1px solid $color-border-input;
  border-radius: $border-radius-sm;
  font-size: $font-size-md;
  transition: $transition-default;
  width: 100%;
  
  &:focus {
    border-color: $color-primary;
    outline: none;
    box-shadow: 0 0 0 2px rgba($color-primary, 0.1);
  }
  
  &::placeholder {
    color: $color-text-light;
  }
}

.readOnlyField {
  padding: $spacing-md;
  background-color: $color-background-light;
  border: 1px solid $color-border;
  border-radius: $border-radius-sm;
  color: $color-text-secondary;
  font-family: monospace;
}

.helperText {
  color: $color-text-secondary;
  font-size: $font-size-xs;
  margin-top: $spacing-xs;
}

.errorText {
  color: $color-error;
  font-size: $font-size-xs;
  margin-top: $spacing-xs;
}

.formActions {
  display: flex;
  justify-content: flex-end;
  gap: $spacing-md;
  margin-top: $spacing-lg;
}

.button {
  padding: $spacing-md $spacing-xl;
  border-radius: $border-radius-sm;
  font-weight: $font-weight-medium;
  cursor: pointer;
  transition: $transition-default;
  
  &:disabled {
    opacity: 0.7;
    cursor: not-allowed;
  }
}

.buttonPrimary {
  background-color: $color-primary;
  color: white;
  border: none;
  
  &:hover:not(:disabled) {
    background-color: $color-primary-dark;
  }
}

.buttonSecondary {
  background-color: $color-background-white;
  color: $color-text-primary;
  border: 1px solid $color-border-input;
  
  &:hover:not(:disabled) {
    background-color: $color-background-light;
  }
}

/* Responsive design */
@media (max-width: $breakpoint-md) {
  .formContainer {
    padding: $spacing-xl;
  }
  
  .formActions {
    flex-direction: column-reverse;
    
    button {
      width: 100%;
    }
  }
}

@media (min-width: $breakpoint-md) {
  .form {
    grid-template-columns: repeat(2, 1fr);
    
    .formGroup:last-of-type,
    .formActions {
      grid-column: 1 / -1;
    }
  }
}

.editableLabel {
  color: $color-primary;
  font-size: $font-size-xs;
  font-weight: normal;
  margin-left: $spacing-sm;
}

.labelWithAction {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
}

.syncButton {
  display: flex;
  align-items: center;
  gap: $spacing-sm;
  padding: $spacing-xs $spacing-md;
  font-size: $font-size-xs;
  color: $color-primary;
  background-color: $color-primary-light;
  border: 1px solid rgba($color-primary, 0.2);
  border-radius: $border-radius-sm;
  transition: $transition-default;
  cursor: pointer;
  
  &:hover:not(:disabled) {
    background-color: rgba($color-primary, 0.1);
  }
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

.syncIcon {
  width: $font-size-md;
  height: $font-size-md;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.spinning {
  animation: spin 1s linear infinite;
} 